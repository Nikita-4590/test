<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrs.mediarequesttool.mappers.RelationRequestMapper"> 

	<resultMap type="com.hrs.mediarequesttool.pojos.RelationRequest" id="mapping">		
		<result property="relation_request_id" column="relation_request_id"/>
		<result property="company_id" column="company_id"/>
		<result property="media_id" column="media_id"/>
		<result property="requester_name" column="requester_name"/>		
		<result property="company_company_id" column="company_company_id" />
		<result property="requester_mail" column="requester_mail"/>
		<result property="requester_phone" column="requester_phone"/>
		<result property="url" column="url"/>		
		<result property="login_id_1" column="login_id_1"/>
		<result property="login_id_2" column="login_id_2"/>
		<result property="login_password_1" column="login_password_1"/>
		<result property="login_password_2" column="login_password_2"/>		
		<result property="crawl_date" column="crawl_date"/>
		<result property="other_comment" column="other_comment"/>
		<result property="status" column="status"/>
		<result property="assign_user_name" column="assign_user_name"/>		
		<result property="update_user_id" column="update_user_id"/>
		<result property="created_at" column="created_at"/>
		<result property="updated_at" column="updated_at"/>
		<result property="company_name" column="company_name"/>
		<result property="media_name" column="media_name"/>
		<result property="status_name" column="status_name"/>	
	</resultMap>
	
	
	<select id="count" parameterType="map" resultType="int">
		select count(relation_request.relation_request_id) from other_media.relation_request as
	    relation_request inner join other_media.contract_company as
	    contract_company on relation_request.company_id = contract_company.id
	    inner join other_media.media as media on media.id = relation_request.media_id
		<where>
			<if test="status == null">
				relation_request.status	in 
					<foreach collection="sql" index="index" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
			</if>
			<if test="status != null">
				CAST(relation_request.status AS TEXT) like #{status}
			</if>
			<if test="requestId != null">
			 and	CAST(relation_request.relation_request_id AS TEXT) like #{requestId}
			</if>
			<if test="companyParam != null">
			 and	contract_company.company_id like #{companyParam} or contract_company.company_name like #{companyParam}
			</if>
			<if test="mediaParam != null">
			 and media.media_id like #{mediaParam} or media.media_name like #{mediaParam}
			</if>						
		</where>		
	</select>
		
	<select id="paging" parameterType="map" resultMap="mapping">
		SELECT relation_request.relation_request_id as relation_request_id,
		relation_request.company_id as company_id,
		relation_request.media_id as media_id,
		relation_request.requester_name as requester_name,
		relation_request.requester_mail as requester_mail,
		relation_request.requester_phone as requester_phone,
		relation_request.url as url,
		relation_request.login_id_1 as login_id_1,
		relation_request.login_id_2 as login_id_2,
		relation_request.login_password_1 as login_password_1,
		relation_request.login_password_2 as login_password_2,
		cast(relation_request.crawl_date as timestamp(0)) as crawl_date,
		relation_request.other_comment as other_comment,		
		relation_request.status as status,
		relation_request.assign_user_name as assign_user_name,
		cast(relation_request.created_at as timestamp(0)) as created_at,
		cast(relation_request.updated_at as timestamp(0)) as updated_at	,contract_company.company_name as company_name,media.media_name as media_name,relation_request_status.description 
		as status_name,contract_company.company_id as company_company_id FROM
		other_media.relation_request as relation_request inner join other_media.contract_company as 
		contract_company on contract_company.id = relation_request.company_id inner join other_media.media
		as media on media.id = relation_request.media_id	inner join other_media.relation_request_status 
		as relation_request_status on relation_request_status.status_type = relation_request.status
		<where>
		   <if test="status == null">
		   	relation_request_status.status_type in 
				<foreach collection="sql" index="index" item="item" open="(" separator="," close=")">
					#{item}
				</foreach>
		   </if>			 
		 	<if test="status != null">
				CAST(relation_request.status AS TEXT) like #{status}
			</if>
			<if test="requestId != null">
			 and	CAST(relation_request.relation_request_id AS TEXT) like #{requestId}
			</if>
			<if test="companyParam != null">
			and	contract_company.company_id like #{companyParam} or contract_company.company_name like #{companyParam}
			</if>
			<if test="mediaParam != null">
			 and media.media_id like #{mediaParam} or media.media_name like #{mediaParam}
			</if>		
		 </where>		
		 <if test="sort != null and direction != null">
	 		OrDER BY relation_request.${sort} ${direction}
	 	 </if>
	 	 <if test="sort == null or direction == null">
	 	 	OrDER BY contract_company.created_at ASC
	 	 </if>
	 	 LIMIT #{page.limit} OFFSET #{page.offset}	 	 
	</select>
</mapper>

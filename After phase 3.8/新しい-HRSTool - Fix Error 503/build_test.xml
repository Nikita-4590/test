<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE project>
<project basedir="." default="build" name="MediaRelation">

  <property environment="env"/>

    <!-- build用定義ファイル読込み -->
    <property file="${basedir}/build.properties" />

    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>

    <!-- build用クラスパスの定義 -->
    <path id="MediaRelation.classpath">
        <fileset dir="${tomcat.lib.dir}" includes="**/*.jar" />
        <fileset dir="${app.lib.dir}" includes="**/*.jar" />
    </path>

    <!-- svnantの定義 -->
    <path id="svnant.classpath">
        <fileset dir="${svnant.lib.dir}" includes="**/*.jar" />
    </path>
    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />
    <svnSetting id="svn.setting" javahl="false" svnkit="true" username="${svn.username}" password="${svn.password}" />

    <!-- ### target ### -->
    <target name="build" depends="start-message,svn-info,svn-release-log,build-all,end-message" description="ビルドおよびリリース資源を作成"/>

    <target name="start-message" depends="" description="ビルド開始のメッセージ">
        <echo message="${app.name}: ${app.name.jp} のビルドを開始します。" />
    </target>

    <target name="svn-info" depends="revision,svn-log" description="SVN情報表示" />

    <target name="revision" depends="" description="プロジェクトのrevision取得">
        <svn refid="svn.setting">
            <singleinfo property="svn.revision" target="${svn.url}" request="revision" />
            <singleinfo property="svn.latest.revision" target="${svn.url}" request="lastRevision" />
            <singleinfo property="svn.release-file.latest.revision" target="${svn.release-file-test.url}" request="lastRevision" />
            <log url="${svn.url}" startRevision="HEAD" stopRevision="0" asXml="false" limit="${svn.log.limit}" destFile="${basedir}/${app.name}-svn.log" />
            <log url="${svn.release-file-test.url}" startRevision="HEAD" stopRevision="0" asXml="false" limit="${svn.log.limit}" destFile="${basedir}/${app.name}-svn-release.log" />
        </svn>
        <echo message="revision ${svn.revision} : リポジトリ全体の最新revision" />
        <echo message="revision ${svn.latest.revision} : ${app.name}の最新revision" />
        <echo message="revision ${svn.release-file.latest.revision} : ${app.name}のリリース環境用設定ファイルの最新revision" />
    </target>

    <target name="svn-log" depends="" description="SVNのログを表示">
        <echo message="${app.name} のコミットログを表示します。（最新 ${svn.log.limit} 件）" />
        <loadfile property="svn.log" srcfile="${basedir}/${app.name}-svn.log" />
        <echo message="${svn.log}" />
        <delete file="${basedir}/${app.name}-svn.log" />
    </target>

    <target name="svn-release-log" depends="" description="SVNのログを表示する。">
        <echo message="${app.name} のリリース環境用設定ファイルのコミットログを表示します。（最新 ${svn.log.limit} 件）" />
        <loadfile property="svn-release.log" srcfile="${basedir}/${app.name}-svn-release.log" />
        <echo message="${svn-release.log}" />
        <delete file="${basedir}/${app.name}-svn-release.log" />
    </target>

    <target name="build-all" depends="build-project,build-war" description="ビルド実施" />

    <target name="clean" depends="" description="お掃除実施">
        <echo message="クリーンします。"/>
        <delete dir="build/classes"/>
        <delete dir="target/*"/>
    </target>

    <target name="init" depends="clean" description="初期処理実施">
        <echo message="初期処理を行います。"/>
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
                <exclude name="**/.svn/**"/>
            </fileset>
        </copy>
    </target>

    <target name="svn-update" depends="" description="SVNから最新プログラムを取込む（更新）">
        <echo message="SVNより最新プログラムを取得します。（更新）"/>
        <svn refid="svn.setting">
            <update revision="HEAD" dir="${basedir}" />

            <export srcUrl="${svn.release-file-test.url}/WebContent/WEB-INF/conf" revision="HEAD" force="true" destPath="${basedir}/WebContent/WEB-INF/conf" />
        </svn>
        <!--
        <copy todir="${basedir}/WebContent/WEB-INF">
            <fileset dir="C:\eclipse-release\pleiades\workspace\リリース環境用_管理Tool用\test_account\MediaRelation\WebContent\WEB-INF" />
        </copy>
        -->
    </target>

    <target name="build-project" depends="init,svn-update" description="コンパイル">
        <echo message="プログラムファイルをコンパイルします。"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <exclude name="**/.svn/**"/>
            <classpath refid="MediaRelation.classpath"/>
        </javac>
    </target>

    <target name="build-war" depends="" description="warファイル作成">
        <echo message="warファイルを作成します。"/>
        <war destfile="target/${war.name}" webxml="WebContent/WEB-INF/web.xml">
            <fileset dir="WebContent">
                <include name="**/*" />
            </fileset>
            <classes dir="build/classes" />
        </war>
        <svn refid="svn.setting">
            <export srcUrl="${svn.url}/WebContent/WEB-INF/conf" revision="HEAD" force="true" destPath="${basedir}/WebContent/WEB-INF/conf" />
        </svn>
    </target>

    <target name="end-message" depends="" description="ビルド終了のメッセージ">
        <echo message="${app.name}: ${app.name.jp} のビルドが終了しました。" />
    </target>

</project>
